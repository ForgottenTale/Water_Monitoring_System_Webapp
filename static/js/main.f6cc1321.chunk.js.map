{"version":3,"sources":["config/fire.js","components/login/login.js","components/menu/menu.js","components/chart/chart.js","components/header/header.js","components/dashboard/dashboard.js","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","useState","email","setEmail","password","setPassword","className","onSubmit","e","preventDefault","auth","signInWithEmailAndPassword","then","u","catch","error","console","log","type","placeholder","onChange","target","value","s","href","Menu","color1","color2","color3","name","user","currentUser","displayName","style","color","marginTop","to","socket","io","Pressure","FlowRate","Ph","Chart","dataReact","setData","useEffect","on","res","currentData","Flowrate","length","shift","width","aspect","data","strokeDasharray","dataKey","stroke","fill","Header","margin","align","onClick","signOut","Dashboard","path","exact","App","setUser","onAuthStateChanged","height","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f6cc1321.chunk.js","sourcesContent":["\r\nimport firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBOXqs66aBAn5z_BCKtG1N8hS4hpAHY9Tg\",\r\n    authDomain: \"reboot-hackathon.firebaseapp.com\",\r\n    databaseURL: \"https://reboot-hackathon.firebaseio.com\",\r\n    projectId: \"reboot-hackathon\",\r\n    storageBucket: \"reboot-hackathon.appspot.com\",\r\n    messagingSenderId: \"357071411578\",\r\n    appId: \"1:357071411578:web:678f6c5a6a38e87bf25ec3\",\r\n    measurementId: \"G-8GBLFCF9KV\"\r\n  };\r\n\r\n  const fire = firebase.initializeApp(firebaseConfig);\r\n  export default fire;","\r\n// Importing libraries\r\n\r\nimport React, { useState } from 'react';\r\nimport './login.css';\r\nimport fire from '../../config/fire';\r\nfunction Login() {\r\n\r\n    const [email, setEmail] = useState({});\r\n    const [password, setPassword] = useState({});\r\n\r\n\r\n    // Returning the line chart\r\n\r\n\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n        fire.auth().signInWithEmailAndPassword(email, password).then((u) => {\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    return (<div className=\"loginpage\">\r\n        <div className=\"login\">\r\n        <h3>Login</h3>\r\n            <form onSubmit={login}>\r\n              \r\n                \r\n              \r\n                    <input type=\"email\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} s/>\r\n                     <div className=\"tbot\"></div>\r\n                    <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)}  />\r\n                    <div className=\"tbot\"></div>\r\n                    <p><a href=\"https://www.youtube.com/\">Forgot password ?</a></p>\r\n                \r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n                <p>Don't have a account ? <a href=\"https://www.youtube.com/\">Sign up here</a></p>\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","\r\n// Importing libraries\r\n\r\nimport React from 'react';\r\nimport './menu.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport fire from '../../config/fire';\r\n\r\nfunction Menu() {\r\n \r\n\r\n\r\nvar user = fire.auth().currentUser;\r\nvar name;\r\n\r\nif (user != null) {\r\n  name = user.displayName;\r\n \r\n}\r\n  // var userUpdate = fire.auth().currentUser;\r\n\r\n  // userUpdate.updateProfile({\r\n  //   displayName: \"Ashmy Shams\",\r\n   \r\n  // }).then(function() {\r\n  //   console.log(\"Done\")\r\n  // }).catch(function(error) {\r\n  //   console.log(error)\r\n  // });\r\n\r\n \r\n    // Returning the line chart\r\n\r\n\r\n    return (\r\n        <div className=\"menu\">\r\n            <div className=\"nav\">\r\n           \r\n            <ul className=\"ul\">\r\n              <div className = \"user\">\r\n               <i className=\"fas fa-user fa-5x\"  style={{color:'rgb(151, 151, 151)'}}></i>\r\n               <h3 style={{color:'rgb(151, 151, 151)', marginTop : 10+\"px\"}}>Welcome</h3>\r\n    <h6  style={{color:'rgb(151, 151, 151)'}}>{name}</h6>\r\n               </div>\r\n            <li>\r\n              <Link to=\"/\">  <i className=\"fas fa-chart-bar\"></i> Dashboard</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/about\">  <i className=\"fas fa-map-marked-alt\"></i> Map View</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/login\">  <i className=\"fas fa-cog\"></i> Settings</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">  <i className=\"fas fa-chart-line\"></i> Generate Report</Link>\r\n            </li>  \r\n            </ul>\r\n            </div>\r\n            <Link to=\"/\"> <p><i className=\"fas fa-question-circle\"></i> Report a problem </p> </Link>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n","\r\n// Importing libraries\r\n\r\nimport React from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useState, useEffect } from 'react';\r\nimport {\r\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, \r\n  ResponsiveContainer\r\n} from 'recharts';\r\nimport './chart.css'\r\n\r\n//Connecting to server at port 5000\r\n\r\nconst socket = io('https://reboothackserver.azurewebsites.net/');\r\n\r\nvar Pressure = 0;\r\nvar FlowRate = 0;\r\nvar Ph = 0;\r\nvar color1;\r\nvar color2;\r\nvar color3;\r\n\r\nfunction colorChange() {\r\n  if (Pressure < 1.4) {\r\n    color1 = {\r\n      color: 'red'\r\n    }\r\n  }\r\n  else {\r\n    color1 = {\r\n      color: 'rgb(110, 110, 110'\r\n    }\r\n  }\r\n  if (Ph < 7|| Ph>7.5) {\r\n    color3 = {\r\n      color: 'red'\r\n    }\r\n  }\r\n  else {\r\n    color3 = {\r\n      color: 'rgb(110, 110, 110'\r\n    }\r\n  }\r\n  if (FlowRate < 24) {\r\n    color2 = {\r\n      color: 'red'\r\n    }\r\n  }\r\n  else {\r\n    color2 = {\r\n      color: 'rgb(110, 110, 110'\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\nfunction Chart() {\r\n\r\n\r\n\r\n  const [dataReact, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on('data1', res => {\r\n      setData(currentData => [...currentData, res]);\r\n      Pressure = res.Pressure;\r\n      FlowRate = res.Flowrate;\r\n      Ph = res.Ph;\r\n      colorChange();\r\n     \r\n    });\r\n  }, []);\r\n  if (dataReact.length>10)\r\n  {\r\n    dataReact.shift();\r\n    \r\n  }\r\n  console.log(dataReact);\r\n\r\n  // Returning the line chart\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      <div className=\"container\">\r\n        <h2>Dashboard</h2>\r\n        <div className=\"row expect\">\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card\">\r\n              <h4>Devices Connected</h4>\r\n              <i className=\"fas fa-wifi fa-2x\"></i>\r\n              <h5>1</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card\">\r\n              <h4 style={color1}>Pressure</h4>\r\n              <i className=\"fas fa-tachometer-alt fa-2x\"></i>\r\n              <h5>{Pressure}</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card\">\r\n              <h4 style={color2}>FlowRate</h4>\r\n              <i className=\"fas fa-water fa-2x\"></i>\r\n              <h5>{FlowRate}</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card\">\r\n              <h4 style={color3}>Ph</h4>\r\n              <i className=\"fas fa-vial fa-2x\"></i>\r\n              <h5>{Ph}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h1>Pressure</h1>\r\n        <div className=\"row\">\r\n\r\n        <ResponsiveContainer width=\"99%\" aspect={3} >\r\n        <AreaChart\r\n            data={dataReact}\r\n            \r\n            className=\"areachart\"\r\n            \r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"MessageDate\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            \r\n            <Area type=\"monotone\" dataKey=\"Pressure\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n          </AreaChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <h1>FlowRate</h1>\r\n        <div className=\"row\">\r\n\r\n\r\n        <ResponsiveContainer width=\"99%\" aspect={3} >\r\n        <AreaChart\r\n            data={dataReact}\r\n            \r\n            className=\"areachart\"\r\n           \r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"MessageDate\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            \r\n            <Area type=\"monotone\" dataKey=\"Flowrate\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\r\n          </AreaChart>\r\n          </ResponsiveContainer>\r\n\r\n        </div>\r\n        <h1>Ph Value</h1>\r\n        <div className=\"row\">\r\n\r\n\r\n        <ResponsiveContainer width=\"99%\" aspect={3} >\r\n        <AreaChart\r\n            data={dataReact}\r\n            \r\n            className=\"areachart\"\r\n           \r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"MessageDate\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            \r\n            <Area type=\"monotone\" dataKey=\"Ph\" stroke=\"#ffc658\" fill=\"#ffc658\" />\r\n          </AreaChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <footer><h6>Developed by DataPirates</h6></footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","\r\n// Importing libraries\r\n\r\nimport React from 'react';\r\nimport './header.css';\r\n\r\nimport fire from '../../config/fire';\r\n\r\nfunction Header() {\r\n\r\nconst LogOut = ()=>{\r\n  fire.auth().signOut();\r\n}\r\n  // var userUpdate = fire.auth().currentUser;\r\n\r\n  // userUpdate.updateProfile({\r\n  //   displayName: \"Abhijith\",\r\n  //   photoURL: \"https://example.com/jane-q-user/profile.jpg\"\r\n  // }).then(function() {\r\n  //   console.log(\"Done\")\r\n  // }).catch(function(error) {\r\n  //   console.log(error)\r\n  // });\r\n\r\n\r\n\r\n// Returning the line chart\r\n\r\nreturn (\r\n  \r\n  <div className=\"header\">\r\n    <i className=\"fas fa-bars fa-2x\" style={{margin: 20}}></i>\r\n\t<div className=\"settings\">\r\n\t<i className=\"fas fa-bell\"></i>\r\n <button className=\"btn-primary\" align=\"right\" onClick={LogOut}>LogOut</button>\r\n\t</div>\r\n\r\n  </div>\r\n  \r\n  );\r\n}\r\n\r\nexport default Header;\r\n","\r\n// Importing libraries\r\n\r\nimport React from 'react';\r\nimport Menu from '../menu/menu'\r\nimport { BrowserRouter as Router, Switch,  Route,} from \"react-router-dom\";\r\nimport Login from '../login/login'\r\nimport Chart from '../chart/chart'\r\nimport Header from '../header/header'\r\nimport './dashboard.css'\r\n\r\n\r\nfunction Dashboard() {\r\n\r\n\r\n\r\n\r\n    // Returning the line chart\r\n\r\n\r\n    return( <div className=\"Dashboard\">\r\n        <Router>\r\n        <Menu />\r\n        <div className=\"rightcontent\" >\r\n            <Header />\r\n         <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Chart />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n        </div>\r\n    </Router>\r\n       \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","\n// Importing libraries\n\nimport React, {useState, useEffect} from 'react';\nimport Login from './components/login/login'\nimport Dashboard from './components/dashboard/dashboard'\nimport './App.css'\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport fire from './config/fire'\n\n\n\nfunction App() {\n\nconst [user,setUser] = useState({})  \n\nfunction authListener() {\n  fire.auth().onAuthStateChanged((user) => {\n   \n    if (user) {\n      setUser({ user });\n     \n   \n    } else {\n      setUser({ user: null });\n     \n    }\n  });\n}\n\nuseEffect(()=>{\n  \n  authListener();\n},[])\n\n\n// Returning the line chart\n\nreturn(\n  \n  <Router>\n\n<div style={{height: 100+\"%\"}}>{user.user ?  ( <Dashboard/>) : (<Login />)}</div>\n  </Router>\n \n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}